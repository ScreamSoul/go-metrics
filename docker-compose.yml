version: "3"
services:
  server:
    container_name: metric-server
    build: 
      dockerfile: build/docker/metrics/Dockerfile
      context: .
      target: server-app
      args:
        - SERVER_BUILD_VERSION=${SERVER_BUILD_VERSION:?Please configure SERVER_BUILD_VERSION in the .env file}
        - SERVER_BUILD_COMMIT=${SERVER_BUILD_COMMIT:?Please configure SERVER_BUILD_COMMIT in the .env file}
    ports:
      - "8080:8080"
    expose:
      - 8080
    depends_on:
       postgres-db:
         condition: service_healthy
    environment:
      - RUN_ADDRESS=0.0.0.0:8080
      - DATABASE_DSN=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db/${POSTGRES_DB}?sslmode=disable
      - ADDRESS=0.0.0.0:8080
      - STORE_INTERVAL=300
      - FILE_STORAGE_PATH=/tmp/metrics_data/metrics-db.json
      - RESTORE=true
      - KEY=${HASH_KEY:-secret}
      - DEBUG=${DEBUG_SERVER:-false}
    volumes:
      - ${DATA_PATH}/metrics_data:/tmp/metrics_data

  agent:
    container_name: metric-agent
    build: 
      dockerfile: build/docker/metrics/Dockerfile
      context: .
      target: agent-app
      args:
        - AGENT_BUILD_VERSION=${AGENT_BUILD_VERSION:?Please configure AGENT_BUILD_VERSION in the .env file}
        - AGENT_BUILD_COMMIT=${AGENT_BUILD_COMMIT:?Please configure AGENT_BUILD_COMMIT in the .env file}
    depends_on:
       postgres-db:
         condition: service_healthy
       server:
         condition: service_started
    environment:
      - RATE_LIMIT=1
      - REPORT_INTERVAL=10
      - POLL_INTERVAL=2
      - ADDRESS=server:8080
      - COMPRESS_REQUEST=true
      - KEY=${HASH_KEY:-secret}


  postgres-db:
    container_name: metrics-postgres-db
    image: postgres:15.4-alpine3.18
    volumes:
      - ${DATA_PATH}/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_USER=${POSTGRES_USER:?Please configure POSTGRES_USER in the .env file}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?Please configure POSTGRES_PASSWORD in the .env file}
      - POSTGRES_DB=${POSTGRES_DB:?Please configure POSTGRES_DB in the .env file}